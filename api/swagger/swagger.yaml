swagger: "2.0"
info:
  description: "This is a sample app for book management, which allows  CRUD operations for book management"
  version: "1.0.0"
  title: "Book Management"
host: "localhost:4000"
basePath: "/api-docs"
tags:
- name: "Book"
  description: "CRUD operations on book"
schemes:
- "http"
paths:
  /bookAPI:
    post:
      tags:
      - "Book"
      summary: "Add a new book to the library"
      description: ""
      operationId: "postNew"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Book object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Book"
      responses:
        200:
          description: "Created"
          schema:
            $ref: "#/definitions/Book"
        400:
          description: "Title is required"
  /Book/{bookId}:
    get:
      tags:
      - "Book"
      summary: "Find book by ID"
      description: "Returns a single book"
      operationId: "getById"
      produces:
      - "application/json"
      parameters:
      - name: "bookId"
        in: "path"
        description: "ID of book to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Book"
        404:
          description: "No book found"
    delete:
      tags:
      - "Book"
      summary: "Deletes a book"
      description: ""
      operationId: "deleteBook"
      produces:
      - "application/json"
      parameters:
      - name: "bookId"
        in: "path"
        description: "Book id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        404:
          description: "No book found"
        204:
          description: ""
    put:
      tags:
      - "Book"
      summary: "Update an existing book"
      description: ""
      operationId: "addNewBook"
      produces:
      - "application/json"
      parameters:
      - name: "bookId"
        in: "path"
        description: "ID of book to update"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Updated object"
        required: true
        schema:
          $ref: "#/definitions/Book"
      responses:
        500:
          description: "Book update failed"
        200:
          description: ""
          schema:
            $ref: "#/definitions/Book"
    patch:
      tags:
      - "Book"
      summary: "Update an attribute in a book"
      description: ""
      operationId: "updateOneBook"
      produces:
      - "application/json"
      parameters:
      - name: "bookId"
        in: "path"
        description: "ID of book to edit"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Updated object"
        required: true
        schema:
          $ref: "#/definitions/Book"
      responses:
        500:
          description: "Book update failed"
        200:
          description: ""
          schema:
            $ref: "#/definitions/Book"
definitions:
  Book:
    type: "object"
    required:
    - "title"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
        example: "War and Peace"
      author:
        type: "string"
        example: "Lev Nikolayevich Tolstoy"
      bookaddedbyuser:
        type: "boolean"
      genre:
        type: "string"
    xml:
      name: "Book"
